plugins {
	id 'lumicore.java-conventions'
}

dependencies {
    // Apache 2.0
	// https://mvnrepository.com/artifact/io.github.willena/sqlite-jdbc
	implementation group: 'io.github.willena', name: 'sqlite-jdbc', version: '3.38.1'
    implementation project(':benchmark')
    implementation project(':ioc-annotations')
    implementation project(':logging')
    implementation project(':orm-annotations')
    implementation project(':properties')
    implementation project(':stack-util')
    // Apache 2.0
	// https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
	implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'

    // Apache 2.0
	// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.3'
	
}

task loadLumicoreBuildProperties() {
	File myfile = file("src/main/resources/lumicore-build.properties");
	def buildProperties = new Properties()
	buildProperties.load(myfile.newDataInputStream())
	println "Version: " + buildProperties.getProperty("version", "NOT FOUND")
	buildProperties.setProperty("name", project.name)
	buildProperties.setProperty("group", project.group)
	buildProperties.setProperty("version", project.version)
	buildProperties.setProperty("time", System.currentTimeMillis() + "")
	buildProperties.store(myfile.newWriter(), null)
}

loadLumicoreBuildProperties {
    outputs.upToDateWhen { false }
}

tasks.matching { it.name != 'loadLumicoreBuildProperties' }.all { Task t ->
    t.dependsOn loadLumicoreBuildProperties
}
tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
